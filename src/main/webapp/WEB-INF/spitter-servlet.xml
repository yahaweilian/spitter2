<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/mvc
	    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <!-- <mvc:resources>:静态资源处理器 -->
    <!-- mapping="/resources/** 表明路径必须以/resources开头，其映射的位置为应用程序根目录下的/resources目录-->
	<mvc:resources location="/resources/*" mapping="/resources/**" />
	
	 <!-- 将在 SpringMVC 上下文中定义一个 – DefaultServletHttpRequestHandler，它会对进入 DispatcherServlet
           的 请求进行筛查，如果发现是没有经过映射的请求，就将该请求交由 WEB 应用服务器默认的 Servlet 处理，
           如果不是静态资源的请求，才由 DispatcherServlet继续处理 -->
    <mvc:default-servlet-handler/>
	
    <mvc:annotation-driven/>
    <context:component-scan base-package="com" /> 
    <!-- 处理器映射Bean -->
    <!-- <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping "/> -->
    <!-- 简单的视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	   <!-- 因home.jsp里使用了JSTL标签,替换InternalResourceView为JstlView -->
	   <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
	   <property name="prefix" value="/WEB-INF/views/" />
	   <property name="suffix" value=".jsp"/>
	</bean>
	<!-- Tiles视图解析器 -->
	<bean class="org.springframework.web.servlet.view.tiles2.TilesViewResolver" />
	<!-- 通过TilesConfigurer来查找Tiles定义的事情 -->
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/views/**/views.xml</value>
			</list>
		</property>
	</bean>
    
    <!-- DispatcherServlet本身並不知道如何處理multipart的表单数据，所以需要一个解析器，把数据抽取出来，然后由DispatcherServlet传给控制器 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
     p:maxUploadSize="500000" />
     
</beans>